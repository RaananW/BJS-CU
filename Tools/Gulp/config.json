{
    "build": {
        "filename": "babylon.max.js",
        "minFilename": "babylon.js",
        "minWorkerFilename": "babylon.worker.js",
        "noModuleFilename": "babylon.no-module.max.js",
        "declarationFilename": "babylon.d.ts",
        "declarationModuleFilename": "babylon.module.d.ts",
        "outputDirectory": "../../dist/preview release",
        "playgroundDirectory": "../../Playground/",
        "tempDirectory": "../../.temp/",
        "intellisenseFile": "babylon.d.txt",
        "intellisenseSources": [
            "../../dist/preview release/babylon.d.ts",
            "../../dist/preview release/gui/babylon.gui.d.ts",
            "../../dist/preview release/loaders/babylonjs.loaders.d.ts",
            "../../dist/preview release/serializers/babylonjs.serializers.d.ts",
            "../../dist/preview release/glTF2Interface/babylon.glTF2Interface.d.ts",
            "../../dist/preview release/materialsLibrary/babylonjs.materials.d.ts",
            "../../dist/preview release/postProcessesLibrary/babylonjs.postProcess.d.ts",
            "../../dist/preview release/proceduralTexturesLibrary/babylonjs.proceduralTextures.d.ts"
        ],
        "outputCustomConfigurationsDirectory": "../../dist/preview release/customConfigurations",
        "srcOutputDirectory": "../../src/",
        "currentConfig": "all",
        "typedocJSON": "../../.temp/babylon.typedoc.json",
        "typedocValidationBaseline": "../../dist/preview release/typedocValidationBaseline.json",
        "dependencies": [
            {
                "name": "CANNON",
                "module": "cannon",
                "optional": true
            },
            {
                "name": "OIMO",
                "module": "oimo",
                "optional": true
            },
            {
                "name": "earcut",
                "module": "earcut",
                "optional": true
            }
        ]
    },
    "buildConfigurations": {
        "all": [
            "pbrMaterial",
            "freeCamera",
            "flyCamera",
            "arcRotateCamera",
            "hemisphericLight",
            "pointLight",
            "directionalLight",
            "spotLight",
            "animations",
            "actions",
            "sprites",
            "picking",
            "collisions",
            "particles",
            "gpuParticles",
            "solidParticles",
            "additionalMeshes",
            "meshBuilder",
            "meshCompression",
            "audio",
            "additionalTextures",
            "shadows",
            "loader",
            "userData",
            "offline",
            "fresnel",
            "multiMaterial",
            "touchCamera",
            "procedural",
            "gamepad",
            "additionalCameras",
            "postProcesses",
            "renderingPipeline",
            "additionalRenderingPipeline",
            "defaultRenderingPipeline",
            "depthRenderer",
            "geometryBufferRenderer",
            "additionalPostProcesses",
            "additionalPostProcess_blur",
            "additionalPostProcess_depthOfFieldBlur",
            "additionalPostProcess_fxaa",
            "additionalPostProcess_circleOfConfusion",
            "additionalPostProcess_depthOfFieldMerge",
            "additionalPostProcess_bloomMerge",
            "additionalPostProcess_depthOfFieldEffect",
            "additionalPostProcess_bloomEffect",
            "additionalPostProcess_imageProcessing",
            "additionalPostProcess_motionBlur",
            "bones",
            "hdr",
            "polygonMesh",
            "csg",
            "lensFlares",
            "physics",
            "textureFormats",
            "debug",
            "utilityLayer",
            "gizmos",
            "morphTargets",
            "octrees",
            "anaglyph",
            "stereoscopic",
            "vr",
            "virtualJoystick",
            "optimizations",
            "highlights",
            "assetsManager",
            "serialization",
            "probes",
            "layer",
            "textureTools",
            "cameraBehaviors",
            "meshBehaviors",
            "nullEngine",
            "instrumentation",
            "backgroundMaterial",
            "environmentHelper",
            "particleHelper",
            "videoDome",
            "photoDome",
            "behaviors",
            "imageProcessing",
            "occlusionQuery",
            "transformFeedback",
            "noise",
            "videoRecorder",
            "sceneHelpers"
        ],
        "minimal": [
            "meshBuilder",
            "freeCamera",
            "flyCamera",
            "hemisphericLight"
        ],
        "360Viewer": [
            "arcRotateCamera",
            "meshBuilder",
            "picking",
            "backgroundMaterial",
            "videoDome"
        ],
        "glTFViewer": [
            "arcRotateCamera",
            "imageProcessing",
            "backgroundMaterial",
            "pbrMaterial",
            "hdr"
        ]
    },
    "workloads": {
        "core": {
            "files": [
                "../../src/Materials/effect.js",
                "../../src/types.js",
                "../../src/Events/keyboardEvents.js",
                "../../src/Events/pointerEvents.js",
                "../../src/Tools/tools.js",
                "../../src/Math/math.js",
                "../../src/Math/math.scalar.js",
                "../../src/mixins.js",
                "../../src/Engine/webgl2.js",
                "../../src/Tools/decorators.js",
                "../../src/Tools/deferred.js",
                "../../src/Tools/observable.js",
                "../../src/Tools/smartArray.js",
                "../../src/Tools/promise.js",
                "../../src/Tools/workerPool.js",
                "../../src/States/alphaCullingState.js",
                "../../src/States/depthCullingState.js",
                "../../src/States/stencilState.js",
                "../../src/Engine/engine.js",
                "../../src/node.js",
                "../../src/Culling/boundingSphere.js",
                "../../src/Culling/boundingBox.js",
                "../../src/Culling/boundingInfo.js",
                "../../src/Mesh/transformNode.js",
                "../../src/Mesh/abstractMesh.js",
                "../../src/Lights/light.js",
                "../../src/Cameras/camera.js",
                "../../src/Rendering/renderingManager.js",
                "../../src/Rendering/renderingGroup.js",
                "../../src/sceneComponent.js",
                "../../src/abstractScene.js",
                "../../src/scene.js",
                "../../src/assetContainer.js",
                "../../src/Mesh/buffer.js",
                "../../src/Mesh/vertexBuffer.js",
                "../../src/Materials/Textures/internalTextureLoader.js",
                "../../src/Materials/Textures/internalTextureTracker.js",
                "../../src/Materials/Textures/internalTexture.js",
                "../../src/Materials/Textures/baseTexture.js",
                "../../src/Materials/Textures/texture.js",
                "../../src/Mesh/mesh.js",
                "../../src/Mesh/subMesh.js",
                "../../src/Materials/material.js",
                "../../src/Materials/uniformBuffer.js",
                "../../src/Mesh/mesh.vertexData.js",
                "../../src/Mesh/geometry.js",
                "../../src/Tools/performanceMonitor.js",
                "../../src/Materials/materialHelper.js",
                "../../src/Materials/pushMaterial.js",
                "../../src/Materials/standardMaterial.js"
            ],
            "shaders": [
                "default.vertex",
                "default.fragment"
            ],
            "shaderIncludes": [
                "depthPrePass",
                "bonesDeclaration",
                "instancesDeclaration",
                "pointCloudVertexDeclaration",
                "bumpVertexDeclaration",
                "clipPlaneVertexDeclaration",
                "fogVertexDeclaration",
                "morphTargetsVertexGlobalDeclaration",
                "morphTargetsVertexDeclaration",
                "logDepthDeclaration",
                "morphTargetsVertex",
                "instancesVertex",
                "bonesVertex",
                "bumpVertex",
                "clipPlaneVertex",
                "fogVertex",
                "shadowsVertex",
                "pointCloudVertex",
                "logDepthVertex",
                "helperFunctions",
                "lightFragmentDeclaration",
                "lightsFragmentFunctions",
                "lightUboDeclaration",
                "defaultVertexDeclaration",
                "defaultFragmentDeclaration",
                "defaultUboDeclaration",
                "shadowsFragmentFunctions",
                "fresnelFunction",
                "reflectionFunction",
                "imageProcessingDeclaration",
                "imageProcessingFunctions",
                "bumpFragmentFunctions",
                "clipPlaneFragmentDeclaration",
                "fogFragmentDeclaration",
                "clipPlaneFragment",
                "bumpFragment",
                "lightFragment",
                "logDepthFragment",
                "fogFragment"
            ]
        },
        "transformFeedback": {
            "files": [
                "../../src/Engine/Extensions/engine.transformFeedback.js"
            ],
            "dependUpon": [
                "core",
                "debug"
            ]
        },
        "occlusionQuery": {
            "files": [
                "../../src/Engine/Extensions/engine.occlusionQuery.js"
            ],
            "dependUpon": [
                "core",
                "debug"
            ]
        },
        "behaviors": {
            "files": [
                "../../src/Behaviors/behavior.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "imageProcessing": {
            "files": [
                "../../src/Materials/imageProcessingConfiguration.js",
                "../../src/Materials/Textures/colorGradingTexture.js",
                "../../src/Materials/colorCurves.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "noise": {
            "files": [
                "../../src/Materials/Textures/Procedurals/noiseProceduralTexture.js"
            ],
            "dependUpon": [
                "core",
                "procedural"
            ],
            "shaders": [
                "noise.fragment"
            ]
        },
        "particles": {
            "files": [
                "../../src/Particles/particle.js",
                "../../src/Particles/baseParticleSystem.js",
                "../../src/Particles/particleSystem.js",
                "../../src/Particles/EmitterTypes/boxParticleEmitter.js",
                "../../src/Particles/EmitterTypes/cylinderParticleEmitter.js",
                "../../src/Particles/EmitterTypes/coneParticleEmitter.js",
                "../../src/Particles/EmitterTypes/sphereParticleEmitter.js",
                "../../src/Particles/EmitterTypes/hemisphericParticleEmitter.js",
                "../../src/Particles/EmitterTypes/pointParticleEmitter.js",
                "../../src/Particles/particleSystemComponent.js",
                "../../src/Particles/subEmitter.js"
            ],
            "dependUpon": [
                "core"
            ],
            "shaders": [
                "particles.vertex",
                "particles.fragment"
            ],
            "shaderIncludes": [
                "clipPlaneVertexDeclaration2",
                "clipPlaneFragmentDeclaration2"
            ]
        },
        "gpuParticles": {
            "files": [
                "../../src/Particles/gpuParticleSystem.js"
            ],
            "dependUpon": [
                "core",
                "particles",
                "transformFeedback"
            ],
            "shaders": [
                "gpuRenderParticles.vertex",
                "gpuRenderParticles.fragment",
                "gpuUpdateParticles.vertex",
                "gpuUpdateParticles.fragment"
            ]
        },
        "nullEngine": {
            "files": [
                "../../src/Engine/nullEngine.js",
                "../../src/Engine/webgl2.js",
                "../../src/mixins.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "instrumentation": {
            "files": [
                "../../src/Engine/webgl2.js",
                "../../src/Instrumentation/engineInstrumentation.js",
                "../../src/Instrumentation/sceneInstrumentation.js",
                "../../src/Instrumentation/timeToken.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "cameraBehaviors": {
            "files": [
                "../../src/Behaviors/Cameras/framingBehavior.js",
                "../../src/Behaviors/Cameras/bouncingBehavior.js",
                "../../src/Behaviors/Cameras/autoRotationBehavior.js"
            ],
            "dependUpon": [
                "behaviors"
            ]
        },
        "meshBehaviors": {
            "files": [
                "../../src/Behaviors/Mesh/pointerDragBehavior.js",
                "../../src/Behaviors/Mesh/multiPointerScaleBehavior.js",
                "../../src/Behaviors/Mesh/sixDofDragBehavior.js",
                "../../src/Behaviors/Mesh/attachToBoxBehavior.js",
                "../../src/Behaviors/Mesh/fadeInOutBehavior.js"
            ],
            "dependUpon": [
                "behaviors"
            ]
        },
        "textureTools": {
            "files": [
                "../../src/Tools/textureTools.js"
            ],
            "dependUpon": [
                "core",
                "postProcesses"
            ]
        },
        "solidParticles": {
            "files": [
                "../../src/Particles/solidParticle.js",
                "../../src/Particles/solidParticleSystem.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "collisions": {
            "files": [
                "../../src/Collisions/collider.js",
                "../../src/Collisions/collisionCoordinator.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "picking": {
            "files": [
                "../../src/Collisions/pickingInfo.js",
                "../../src/Culling/ray.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "sprites": {
            "files": [
                "../../src/Sprites/spriteManager.js",
                "../../src/Sprites/sprite.js",
                "../../src/Sprites/spriteSceneComponent.js"
            ],
            "dependUpon": [
                "core"
            ],
            "shaders": [
                "sprites.vertex",
                "sprites.fragment"
            ]
        },
        "animations": {
            "files": [
                "../../src/Animations/animationPropertiesOverride.js",
                "../../src/Animations/animation.js",
                "../../src/Animations/animationGroup.js",
                "../../src/Animations/runtimeAnimation.js",
                "../../src/Animations/animatable.js",
                "../../src/Animations/easing.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "actions": {
            "files": [
                "../../src/Actions/condition.js",
                "../../src/Actions/action.js",
                "../../src/Actions/actionManager.js",
                "../../src/Actions/interpolateValueAction.js",
                "../../src/Actions/directActions.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "additionalMeshes": {
            "files": [
                "../../src/Mesh/groundMesh.js",
                "../../src/Mesh/instancedMesh.js",
                "../../src/Mesh/linesMesh.js"
            ],
            "dependUpon": [
                "core",
                "shaderMaterial"
            ],
            "shaders": [
                "color.vertex",
                "color.fragment"
            ]
        },
        "meshBuilder": {
            "files": [
                "../../src/Mesh/meshBuilder.js"
            ],
            "dependUpon": [
                "core",
                "additionalMeshes"
            ]
        },
        "meshCompression": {
            "files": [
                "../../src/Mesh/Compression/dracoCompression.js"
            ]
        },
        "shaderMaterial": {
            "files": [
                "../../src/Materials/shaderMaterial.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "pbrMaterial": {
            "files": [
                "../../src/Materials/PBR/pbrBaseMaterial.js",
                "../../src/Materials/PBR/pbrBaseSimpleMaterial.js",
                "../../src/Materials/PBR/pbrMaterial.js",
                "../../src/Materials/PBR/pbrMetallicRoughnessMaterial.js",
                "../../src/Materials/PBR/pbrSpecularGlossinessMaterial.js"
            ],
            "dependUpon": [
                "core",
                "harmonics"
            ],
            "shaders": [
                "pbr.vertex",
                "pbr.fragment",
                "rgbdEncode.fragment",
                "rgbdDecode.fragment"
            ],
            "shaderIncludes": [
                "pbrVertexDeclaration",
                "pbrFragmentDeclaration",
                "pbrUboDeclaration",
                "pbrFunctions",
                "harmonicsFunctions",
                "pbrLightFunctions"
            ]
        },
        "targetCamera": {
            "files": [
                "../../src/Cameras/cameraInputsManager.js",
                "../../src/Cameras/targetCamera.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "freeCamera": {
            "files": [
                "../../src/Cameras/Inputs/freeCameraMouseInput.js",
                "../../src/Cameras/Inputs/freeCameraKeyboardMoveInput.js",
                "../../src/Cameras/freeCameraInputsManager.js",
                "../../src/Cameras/freeCamera.js"
            ],
            "dependUpon": [
                "targetCamera"
            ]
        },
        "flyCamera": {
            "files": [
                "../../src/Cameras/Inputs/flyCameraMouseInput.js",
                "../../src/Cameras/Inputs/flyCameraKeyboardInput.js",
                "../../src/Cameras/flyCameraInputsManager.js",
                "../../src/Cameras/flyCamera.js"
            ],
            "dependUpon": [
                "targetCamera"
            ]
        },
        "arcRotateCamera": {
            "files": [
                "../../src/Cameras/Inputs/arcRotateCameraKeyboardMoveInput.js",
                "../../src/Cameras/Inputs/arcRotateCameraMouseWheelInput.js",
                "../../src/Cameras/Inputs/arcRotateCameraPointersInput.js",
                "../../src/Cameras/arcRotateCameraInputsManager.js",
                "../../src/Cameras/arcRotateCamera.js"
            ],
            "dependUpon": [
                "targetCamera"
            ]
        },
        "hemisphericLight": {
            "files": [
                "../../src/Lights/hemisphericLight.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "pointLight": {
            "files": [
                "../../src/Lights/shadowLight.js",
                "../../src/Lights/pointLight.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "directionalLight": {
            "files": [
                "../../src/Lights/shadowLight.js",
                "../../src/Lights/directionalLight.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "spotLight": {
            "files": [
                "../../src/Lights/shadowLight.js",
                "../../src/Lights/spotLight.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "audio": {
            "files": [
                "../../src/Audio/audioEngine.js",
                "../../src/Audio/sound.js",
                "../../src/Audio/soundtrack.js",
                "../../src/Audio/analyser.js",
                "../../src/Audio/weightedsound.js",
                "../../src/Audio/audioSceneComponent.js",
                "../../src/Actions/directAudioActions.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "additionalTextures": {
            "files": [
                "../../src/Materials/Textures/cubeTexture.js",
                "../../src/Materials/Textures/rawCubeTexture.js",
                "../../src/Materials/Textures/renderTargetTexture.js",
                "../../src/Materials/Textures/multiRenderTarget.js",
                "../../src/Materials/Textures/mirrorTexture.js",
                "../../src/Materials/Textures/refractionTexture.js",
                "../../src/Materials/Textures/dynamicTexture.js",
                "../../src/Materials/Textures/videoTexture.js",
                "../../src/Materials/Textures/rawTexture.js",
                "../../src/Materials/Textures/rawTexture3D.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "shadows": {
            "files": [
                "../../src/Lights/Shadows/shadowGenerator.js",
                "../../src/Lights/Shadows/shadowGeneratorSceneComponent.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "shadowMap.vertex",
                "shadowMap.fragment",
                "depthBoxBlur.fragment"
            ]
        },
        "loader": {
            "files": [
                "../../src/Loading/loadingScreen.js",
                "../../src/Loading/sceneLoader.js",
                "../../src/Loading/Plugins/babylonFileLoader.js",
                "../../src/Tools/filesInput.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "stringDictionary": {
            "files": [
                "../../src/Tools/stringDictionary.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "userData": {
            "files": [
                "../../src/Tools/tags.js",
                "../../src/Tools/andOrNotEvaluator.js"
            ],
            "dependUpon": [
                "stringDictionary"
            ]
        },
        "offline": {
            "files": [
                "../../src/Offline/database.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "fresnel": {
            "files": [
                "../../src/Materials/fresnelParameters.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "multiMaterial": {
            "files": [
                "../../src/Materials/multiMaterial.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "touchCamera": {
            "files": [
                "../../src/Cameras/Inputs/freeCameraTouchInput.js",
                "../../src/Cameras/touchCamera.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "procedural": {
            "files": [
                "../../src/Materials/Textures/Procedurals/proceduralTexture.js",
                "../../src/Materials/Textures/Procedurals/proceduralTextureSceneComponent.js",
                "../../src/Materials/Textures/Procedurals/customProceduralTexture.js"
            ],
            "dependUpon": [
                "core"
            ],
            "shaders": [
                "procedural.vertex"
            ]
        },
        "gamepad": {
            "files": [
                "../../src/Cameras/Inputs/freeCameraGamepadInput.js",
                "../../src/Cameras/Inputs/arcRotateCameraGamepadInput.js",
                "../../src/Gamepad/gamepadManager.js",
                "../../src/Gamepad/gamepad.js",
                "../../src/Gamepad/xboxGamepad.js",
                "../../src/Gamepad/Controllers/poseEnabledController.js",
                "../../src/Gamepad/Controllers/webVRController.js",
                "../../src/Gamepad/Controllers/oculusTouchController.js",
                "../../src/Gamepad/Controllers/viveController.js",
                "../../src/Gamepad/Controllers/genericController.js",
                "../../src/Gamepad/Controllers/windowsMotionController.js",
                "../../src/Gamepad/Controllers/gearVRController.js",
                "../../src/Gamepad/Controllers/daydreamController.js",
                "../../src/Gamepad/gamepadSceneComponent.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "additionalCameras": {
            "files": [
                "../../src/Cameras/followCamera.js",
                "../../src/Cameras/universalCamera.js",
                "../../src/Cameras/gamepadCamera.js"
            ],
            "dependUpon": [
                "gamepad"
            ]
        },
        "depthRenderer": {
            "files": [
                "../../src/Rendering/depthRenderer.js",
                "../../src/Rendering/depthRendererSceneComponent.js"
            ],
            "dependUpon": [
                "core"
            ],
            "shaders": [
                "depth.vertex",
                "depth.fragment"
            ],
            "shaderIncludes": []
        },
        "geometryBufferRenderer": {
            "files": [
                "../../src/Rendering/geometryBufferRenderer.js",
                "../../src/Rendering/geometryBufferRendererSceneComponent.js"
            ],
            "dependUpon": [
                "core"
            ],
            "shaders": [
                "geometry.vertex",
                "geometry.fragment"
            ],
            "shaderIncludes": [
                "mrtFragmentDeclaration",
                "bones300Declaration",
                "instances300Declaration"
            ]
        },
        "postProcesses": {
            "files": [
                "../../src/PostProcess/postProcessManager.js",
                "../../src/PostProcess/postProcess.js",
                "../../src/PostProcess/passPostProcess.js"
            ],
            "dependUpon": [
                "core"
            ],
            "shaders": [
                "postprocess.vertex",
                "pass.fragment"
            ]
        },
        "additionalPostProcess_blur": {
            "files": [
                "../../src/PostProcess/blurPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "kernelBlur.vertex",
                "kernelBlur.fragment"
            ],
            "shaderIncludes": [
                "kernelBlurFragment",
                "kernelBlurFragment2",
                "kernelBlurVaryingDeclaration",
                "kernelBlurVertex"
            ]
        },
        "additionalPostProcess_depthOfFieldBlur": {
            "files": [
                "../../src/PostProcess/depthOfFieldBlurPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses",
                "additionalPostProcess_blur"
            ],
            "shaders": [
                "kernelBlur.vertex",
                "kernelBlur.fragment"
            ],
            "shaderIncludes": [
                "kernelBlurFragment",
                "kernelBlurFragment2",
                "kernelBlurVaryingDeclaration",
                "kernelBlurVertex"
            ]
        },
        "additionalPostProcess_circleOfConfusion": {
            "files": [
                "../../src/PostProcess/circleOfConfusionPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "circleOfConfusion.fragment"
            ]
        },
        "additionalPostProcess_sharpen": {
            "files": [
                "../../src/PostProcess/sharpenPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "sharpen.fragment"
            ]
        },
        "additionalPostProcess_chromaticAberration": {
            "files": [
                "../../src/PostProcess/chromaticAberrationPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "chromaticAberration.fragment"
            ]
        },
        "additionalPostProcess_grain": {
            "files": [
                "../../src/PostProcess/grainPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "grain.fragment"
            ]
        },
        "additionalPostProcess_depthOfFieldMerge": {
            "files": [
                "../../src/PostProcess/depthOfFieldMergePostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "depthOfFieldMerge.fragment"
            ]
        },
        "additionalPostProcess_bloomMerge": {
            "files": [
                "../../src/PostProcess/bloomMergePostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "bloomMerge.fragment"
            ]
        },
        "additionalPostProcess_depthOfFieldEffect": {
            "files": [
                "../../src/PostProcess/depthOfFieldEffect.js"
            ],
            "dependUpon": [
                "additionalPostProcess_depthOfFieldBlur",
                "additionalPostProcess_depthOfFieldMerge",
                "additionalPostProcess_circleOfConfusion"
            ]
        },
        "additionalPostProcess_bloomEffect": {
            "files": [
                "../../src/PostProcess/bloomEffect.js"
            ],
            "dependUpon": [
                "additionalPostProcess_blur",
                "additionalPostProcess_bloomMerge",
                "additionalPostProcess_extractHighlights"
            ]
        },
        "additionalPostProcess_fxaa": {
            "files": [
                "../../src/PostProcess/fxaaPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "fxaa.vertex",
                "fxaa.fragment"
            ]
        },
        "additionalPostProcess_highlights": {
            "files": [
                "../../src/PostProcess/highlightsPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "highlights.fragment"
            ]
        },
        "additionalPostProcess_extractHighlights": {
            "files": [
                "../../src/PostProcess/extractHighlightsPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "extractHighlights.fragment"
            ]
        },
        "additionalPostProcess_imageProcessing": {
            "files": [
                "../../src/PostProcess/imageProcessingPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses",
                "imageProcessing"
            ],
            "shaders": [
                "imageProcessing.fragment"
            ],
            "shaderIncludes": []
        },
        "additionalPostProcess_motionBlur": {
            "files": [
                "../../src/PostProcess/motionBlurPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses"
            ],
            "shaders": [
                "motionBlur.fragment"
            ]
        },
        "additionalPostProcesses": {
            "files": [
                "../../src/PostProcess/refractionPostProcess.js",
                "../../src/PostProcess/blackAndWhitePostProcess.js",
                "../../src/PostProcess/convolutionPostProcess.js",
                "../../src/PostProcess/sharpenPostProcess.js",
                "../../src/PostProcess/chromaticAberrationPostProcess.js",
                "../../src/PostProcess/grainPostProcess.js",
                "../../src/PostProcess/filterPostProcess.js",
                "../../src/PostProcess/fxaaPostProcess.js",
                "../../src/PostProcess/volumetricLightScatteringPostProcess.js",
                "../../src/PostProcess/colorCorrectionPostProcess.js",
                "../../src/PostProcess/tonemapPostProcess.js",
                "../../src/PostProcess/displayPassPostProcess.js",
                "../../src/PostProcess/highlightsPostProcess.js",
                "../../src/PostProcess/extractHighlightsPostProcess.js",
                "../../src/PostProcess/imageProcessingPostProcess.js",
                "../../src/PostProcess/motionBlurPostProcess.js"
            ],
            "dependUpon": [
                "postProcesses",
                "imageProcessing"
            ],
            "shaders": [
                "refraction.fragment",
                "blackAndWhite.fragment",
                "convolution.fragment",
                "sharpen.fragment",
                "filter.fragment",
                "fxaa.fragment",
                "volumetricLightScattering.fragment",
                "volumetricLightScatteringPass.fragment",
                "colorCorrection.fragment",
                "tonemap.fragment",
                "displayPass.fragment",
                "highlights.fragment",
                "imageProcessing.fragment",
                "motionBlur.fragment"
            ]
        },
        "renderingPipeline": {
            "files": [
                "../../src/PostProcess/RenderPipeline/postProcessRenderPipelineManager.js",
                "../../src/PostProcess/RenderPipeline/postProcessRenderPipelineManagerSceneComponent.js",
                "../../src/PostProcess/RenderPipeline/postProcessRenderEffect.js",
                "../../src/PostProcess/RenderPipeline/postProcessRenderPipeline.js"
            ],
            "dependUpon": [
                "postProcesses"
            ]
        },
        "additionalRenderingPipeline": {
            "files": [
                "../../src/PostProcess/RenderPipeline/Pipelines/ssaoRenderingPipeline.js",
                "../../src/PostProcess/RenderPipeline/Pipelines/ssao2RenderingPipeline.js",
                "../../src/PostProcess/RenderPipeline/Pipelines/lensRenderingPipeline.js",
                "../../src/PostProcess/RenderPipeline/Pipelines/standardRenderingPipeline.js"
            ],
            "dependUpon": [
                "renderingPipeline",
                "depthRenderer",
                "geometryBufferRenderer"
            ],
            "shaders": [
                "ssao.fragment",
                "ssao2.fragment",
                "ssaoCombine.fragment",
                "lensHighlights.fragment",
                "depthOfField.fragment",
                "standard.fragment"
            ]
        },
        "defaultRenderingPipeline": {
            "files": [
                "../../src/PostProcess/RenderPipeline/Pipelines/defaultRenderingPipeline.js"
            ],
            "dependUpon": [
                "renderingPipeline",
                "additionalPostProcess_fxaa",
                "additionalPostProcess_chromaticAberration",
                "additionalPostProcess_grain",
                "additionalPostProcess_sharpen",
                "additionalPostProcess_depthOfFieldEffect",
                "additionalPostProcess_bloomEffect"
            ]
        },
        "bones": {
            "files": [
                "../../src/Bones/bone.js",
                "../../src/Bones/boneIKController.js",
                "../../src/Bones/boneLookController.js",
                "../../src/Bones/skeleton.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "hdr": {
            "files": [
                "../../src/Tools/HDR/hdr.js",
                "../../src/Materials/Textures/hdrCubeTexture.js",
                "../../src/Tools/HDR/panoramaToCubemap.js"
            ],
            "dependUpon": [
                "core",
                "harmonics"
            ]
        },
        "csg": {
            "files": [
                "../../src/Mesh/csg.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "polygonMesh": {
            "files": [
                "../../src/Mesh/polygonMesh.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "lensFlares": {
            "files": [
                "../../src/LensFlare/lensFlare.js",
                "../../src/LensFlare/lensFlareSystemSceneComponent.js",
                "../../src/LensFlare/lensFlareSystem.js"
            ],
            "dependUpon": [
                "core"
            ],
            "shaders": [
                "lensFlare.vertex",
                "lensFlare.fragment"
            ]
        },
        "physics": {
            "files": [
                "../../src/Physics/physicsJoint.js",
                "../../src/Physics/physicsImpostor.js",
                "../../src/Physics/physicsEngine.js",
                "../../src/Physics/physicsHelper.js",
                "../../src/Physics/Plugins/cannonJSPlugin.js",
                "../../src/Physics/Plugins/oimoJSPlugin.js",
                "../../src/Physics/physicsEngineComponent.js"
            ],
            "dependUpon": [
                "core",
                "picking"
            ]
        },
        "harmonics": {
            "files": [
                "../../src/Math/sphericalPolynomial.js",
                "../../src/Tools/HDR/cubemapToSphericalPolynomial.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "textureFormats": {
            "files": [],
            "dependUpon": [
                "dds",
                "tga",
                "ktx",
                "env"
            ]
        },
        "dds": {
            "files": [
                "../../src/Tools/dds.js",
                "../../src/Materials/Textures/Loaders/ddsTextureLoader.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "tga": {
            "files": [
                "../../src/Tools/tga.js",
                "../../src/Materials/Textures/Loaders/tgaTextureLoader.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "ktx": {
            "files": [
                "../../src/Tools/khronosTextureContainer.js",
                "../../src/Materials/Textures/Loaders/ktxTextureLoader.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "env": {
            "files": [
                "../../src/Tools/environmentTextureTools.js",
                "../../src/Materials/Textures/Loaders/envTextureLoader.js"
            ],
            "dependUpon": [
                "core",
                "harmonics"
            ]
        },
        "debug": {
            "files": [
                "../../src/Debug/skeletonViewer.js",
                "../../src/Debug/axesViewer.js",
                "../../src/Debug/boneAxesViewer.js",
                "../../src/Debug/rayHelper.js",
                "../../src/Debug/debugLayer.js",
                "../../src/Debug/physicsViewer.js",
                "../../src/Rendering/boundingBoxRenderer.js"
            ],
            "dependUpon": [
                "shaderMaterial",
                "additionalMeshes",
                "core",
                "stringDictionary",
                "actions"
            ],
            "shaders": []
        },
        "utilityLayer": {
            "files": [
                "../../src/Rendering/utilityLayerRenderer.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "gizmos": {
            "files": [
                "../../src/Gizmos/gizmo.js",
                "../../src/Gizmos/axisDragGizmo.js",
                "../../src/Gizmos/axisScaleGizmo.js",
                "../../src/Gizmos/planeRotationGizmo.js",
                "../../src/Gizmos/positionGizmo.js",
                "../../src/Gizmos/rotationGizmo.js",
                "../../src/Gizmos/scaleGizmo.js",
                "../../src/Gizmos/boundingBoxGizmo.js",
                "../../src/Gizmos/gizmoManager.js"
            ],
            "dependUpon": [
                "core",
                "utilityLayer",
                "meshBehaviors"
            ]
        },
        "morphTargets": {
            "files": [
                "../../src/Morph/morphTarget.js",
                "../../src/Morph/morphTargetManager.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "octrees": {
            "files": [
                "../../src/Culling/Octrees/octree.js",
                "../../src/Culling/Octrees/octreeBlock.js",
                "../../src/Culling/Octrees/octreeSceneComponent.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "anaglyph": {
            "files": [
                "../../src/PostProcess/anaglyphPostProcess.js",
                "../../src/Cameras/Stereoscopic/anaglyphArcRotateCamera.js",
                "../../src/Cameras/Stereoscopic/anaglyphFreeCamera.js",
                "../../src/Cameras/Stereoscopic/anaglyphGamepadCamera.js",
                "../../src/Cameras/Stereoscopic/anaglyphUniversalCamera.js"
            ],
            "dependUpon": [
                "core",
                "postProcesses",
                "freeCamera",
                "gamepad"
            ],
            "shaders": [
                "anaglyph.fragment"
            ]
        },
        "stereoscopic": {
            "files": [
                "../../src/PostProcess/stereoscopicInterlacePostProcess.js",
                "../../src/Cameras/Stereoscopic/stereoscopicArcRotateCamera.js",
                "../../src/Cameras/Stereoscopic/stereoscopicFreeCamera.js",
                "../../src/Cameras/Stereoscopic/stereoscopicGamepadCamera.js",
                "../../src/Cameras/Stereoscopic/stereoscopicUniversalCamera.js"
            ],
            "dependUpon": [
                "core",
                "postProcesses",
                "freeCamera",
                "gamepad"
            ],
            "shaders": [
                "stereoscopicInterlace.fragment"
            ]
        },
        "vr": {
            "files": [
                "../../src/PostProcess/vrDistortionCorrectionPostProcess.js",
                "../../src/Cameras/Inputs/freeCameraDeviceOrientationInput.js",
                "../../src/Cameras/Inputs/arcRotateCameraVRDeviceOrientationInput.js",
                "../../src/Cameras/VR/vrCameraMetrics.js",
                "../../src/Cameras/VR/webVRCamera.js",
                "../../src/Cameras/deviceOrientationCamera.js",
                "../../src/Cameras/VR/vrDeviceOrientationFreeCamera.js",
                "../../src/Cameras/VR/vrDeviceOrientationArcRotateCamera.js",
                "../../src/Cameras/VR/vrDeviceOrientationGamepadCamera.js",
                "../../src/Cameras/VR/vrExperienceHelper.js",
                "../../src/Cameras/XR/webXRCamera.js",
                "../../src/Cameras/XR/webXRSessionManager.js",
                "../../src/Cameras/XR/webXRExperienceHelper.js",
                "../../src/Cameras/XR/webXREnterExitUI.js",
                "../../src/Cameras/XR/webXRManagedOutputCanvas.js",
                "../../src/Cameras/XR/webXRInput.js"
            ],
            "dependUpon": [
                "core",
                "postProcesses",
                "freeCamera",
                "gamepad"
            ],
            "shaders": [
                "vrDistortionCorrection.fragment"
            ]
        },
        "virtualJoystick": {
            "files": [
                "../../src/Tools/virtualJoystick.js",
                "../../src/Cameras/virtualJoysticksCamera.js",
                "../../src/Cameras/Inputs/freeCameraVirtualJoystickInput.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "optimizations": {
            "files": [
                "../../src/Mesh/meshSimplification.js",
                "../../src/Mesh/meshSimplificationSceneComponent.js",
                "../../src/Mesh/meshLODLevel.js",
                "../../src/Tools/sceneOptimizer.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "highlights": {
            "files": [
                "../../src/Rendering/outlineRenderer.js",
                "../../src/Rendering/edgesRenderer.js",
                "../../src/Rendering/lineEdgesRenderer.js",
                "../../src/Layer/effectLayerSceneComponent.js",
                "../../src/Layer/effectLayer.js",
                "../../src/Layer/highlightLayer.js",
                "../../src/Layer/glowLayer.js"
            ],
            "dependUpon": [
                "shaderMaterial"
            ],
            "shaders": [
                "glowBlurPostProcess.fragment",
                "glowMapGeneration.fragment",
                "glowMapGeneration.vertex",
                "glowMapMerge.fragment",
                "glowMapMerge.vertex",
                "line.vertex",
                "line.fragment",
                "outline.vertex",
                "outline.fragment"
            ]
        },
        "assetsManager": {
            "files": [
                "../../src/Tools/assetsManager.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "serialization": {
            "files": [
                "../../src/Tools/sceneSerializer.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "probes": {
            "files": [
                "../../src/Probes/reflectionProbe.js"
            ],
            "dependUpon": [
                "core"
            ]
        },
        "layer": {
            "files": [
                "../../src/Layer/layerSceneComponent.js",
                "../../src/Layer/layer.js"
            ],
            "dependUpon": [
                "core"
            ],
            "shaders": [
                "layer.vertex",
                "layer.fragment"
            ]
        },
        "backgroundMaterial": {
            "files": [
                "../../src/Materials/Background/backgroundMaterial.js"
            ],
            "dependUpon": [
                "core"
            ],
            "shaders": [
                "background.vertex",
                "background.fragment"
            ],
            "shaderIncludes": [
                "backgroundVertexDeclaration",
                "backgroundFragmentDeclaration",
                "backgroundUboDeclaration"
            ]
        },
        "sceneHelpers": {
            "files": [
                "../../src/Helpers/sceneHelpers.js"
            ],
            "dependUpon": [
                "core",
                "arcRotateCamera",
                "freeCamera",
                "hemisphericLight",
                "pbrMaterial",
                "environmentHelper",
                "vr"
            ]
        },
        "environmentHelper": {
            "files": [
                "../../src/Helpers/environmentHelper.js"
            ],
            "dependUpon": [
                "core",
                "backgroundMaterial",
                "additionalTextures"
            ]
        },
        "particleHelper": {
            "files": [
                "../../src/Particles/particleSystemSet.js",
                "../../src/Particles/particleHelper.js"
            ],
            "dependUpon": [
                "particles"
            ]
        },
        "videoDome": {
            "files": [
                "../../src/Helpers/videoDome.js"
            ],
            "dependUpon": [
                "core",
                "meshBuilder",
                "additionalTextures"
            ]
        },
        "photoDome": {
            "files": [
                "../../src/Helpers/photoDome.js"
            ],
            "dependUpon": [
                "core",
                "meshBuilder",
                "additionalTextures"
            ]
        },
        "videoRecorder": {
            "files": [
                "../../src/Tools/videoRecorder.js"
            ],
            "dependUpon": [
                "core"
            ]
        }
    },
    "typescript": [
        "../../src/**/*.ts"
    ],
    "workers": [
        {
            "variable": "BABYLON.CollisionWorker",
            "files": [
                "../../src/Collisions/collider.js",
                "../../src/Collisions/collisionWorker.js",
                "../../src/Collisions/collisionCoordinator.js",
                "../../src/Math/math.js"
            ]
        }
    ],
    "modules": [
        "core",
        "materialsLibrary",
        "postProcessesLibrary",
        "proceduralTexturesLibrary",
        "loaders",
        "serializers",
        "gui",
        "inspector"
    ],
    "viewerModules": [
        "viewer",
        "viewer-assets"
    ],
    "core": {
        "isCore": true,
        "libraries": [
            {
                "output": "babylon.js",
                "maxOutput": "babylon.max.js",
                "entry": "./Legacy/legacy.ts"
            }
        ],
        "build": {
            "webpack": "../../../src/webpack.config.js",
            "srcDirectory": "../../src/",
            "distOutputDirectory": "/",
            "dtsBundle": {
                "name": "babylonjs",
                "main": "../../dist/preview release/build/src/index.d.ts",
                "out": "../babylon.module.d.ts",
                "baseDir": "../../dist/preview release/build/",
                "headerText": "BabylonJS"
            },
            "processDeclaration": {
                "filename": "babylon.module.d.ts",
                "packageName": "babylonjs",
                "moduleName": "BABYLON",
                "importsToRemove": [],
                "classMap": {
                    "babylonjs": "BABYLON"
                }
            }
        }
    },
    "materialsLibrary": {
        "libraries": [
            {
                "output": "babylonjs.materials.min.js",
                "entry": "./legacy/legacy.ts"
            },
            {
                "output": "babylon.cellMaterial.min.js",
                "entry": "./legacy/legacy-cell.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.customMaterial.min.js",
                "entry": "./legacy/legacy-custom.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.fireMaterial.min.js",
                "entry": "./legacy/legacy-fire.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.furMaterial.min.js",
                "entry": "./legacy/legacy-fur.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.gradientMaterial.min.js",
                "entry": "./legacy/legacy-gradient.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.gridMaterial.min.js",
                "entry": "./legacy/legacy-grid.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.lavaMaterial.min.js",
                "entry": "./legacy/legacy-lava.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.mixMaterial.min.js",
                "entry": "./legacy/legacy-mix.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.normalMaterial.min.js",
                "entry": "./legacy/legacy-normal.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.shadowOnlyMaterial.min.js",
                "entry": "./legacy/legacy-shadowOnly.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.simpleMaterial.min.js",
                "entry": "./legacy/legacy-simple.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.skyMaterial.min.js",
                "entry": "./legacy/legacy-sky.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.terrainMaterial.min.js",
                "entry": "./legacy/legacy-terrain.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.triPlanarMaterial.min.js",
                "entry": "./legacy/legacy-triPlanar.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.waterMaterial.min.js",
                "entry": "./legacy/legacy-water.ts",
                "preventLoadLibrary": true
            }
        ],
        "build": {
            "webpack": "../../../materialsLibrary/webpack.config.js",
            "srcDirectory": "../../materialsLibrary/src/",
            "distOutputDirectory": "/materialsLibrary/",
            "dtsBundle": {
                "name": "babylonjs-materials",
                "main": "../../dist/preview release/materialsLibrary/build/src/index.d.ts",
                "out": "../babylonjs.materials.module.d.ts",
                "baseDir": "../../dist/preview release/materialsLibrary/build/",
                "headerText": "BabylonJS Materials"
            },
            "processDeclaration": {
                "filename": "babylonjs.materials.module.d.ts",
                "packageName": "babylonjs-materials",
                "moduleName": "BABYLON",
                "importsToRemove": [],
                "classMap": {
                    "babylonjs": "BABYLON",
                    "babylonjs-loaders": "BABYLON",
                    "babylonjs-serializers": "BABYLON"
                }
            }
        }
    },
    "postProcessesLibrary": {
        "libraries": [
            {
                "output": "babylonjs.postProcess.min.js",
                "entry": "./legacy/legacy.ts"
            },
            {
                "output": "babylon.asciiArtPostProcess.min.js",
                "entry": "./legacy/legacy-asciiArt.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.digitalRainPostProcess.min.js",
                "entry": "./legacy/legacy-digitalRain.ts",
                "preventLoadLibrary": true
            }
        ],
        "build": {
            "webpack": "../../../postProcessLibrary/webpack.config.js",
            "srcDirectory": "../../postProcessLibrary/src/",
            "distOutputDirectory": "/postProcessesLibrary/",
            "dtsBundle": {
                "name": "babylonjs-postProcessLibrary",
                "main": "../../dist/preview release/postProcessesLibrary/build/src/index.d.ts",
                "out": "../babylonjs.postProcess.module.d.ts",
                "baseDir": "../../dist/preview release/postProcessesLibrary/build/",
                "headerText": "BabylonJS Postprocess library"
            },
            "processDeclaration": {
                "filename": "babylonjs.postProcess.module.d.ts",
                "packageName": "babylonjs-postProcessLibrary",
                "moduleName": "BABYLON",
                "importsToRemove": [],
                "classMap": {
                    "babylonjs": "BABYLON",
                    "babylonjs-loaders": "BABYLON",
                    "babylonjs-serializers": "BABYLON"
                }
            }
        }
    },
    "proceduralTexturesLibrary": {
        "libraries": [
            {
                "output": "babylonjs.proceduralTextures.min.js",
                "entry": "./legacy/legacy.ts"
            },
            {
                "output": "babylon.brickProceduralTexture.min.js",
                "entry": "./legacy/legacy-brick.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.cloudProceduralTexture.min.js",
                "entry": "./legacy/legacy-cloud.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.fireProceduralTexture.min.js",
                "entry": "./legacy/legacy-fire.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.grassProceduralTexture.min.js",
                "entry": "./legacy/legacy-grass.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.marbleProceduralTexture.min.js",
                "entry": "./legacy/legacy-marble.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.normalMapProceduralTexture.min.js",
                "entry": "./legacy/legacy-normalMap.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.perlinNoiseProceduralTexture.min.js",
                "entry": "./legacy/legacy-perlinNoise.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.roadProceduralTexture.min.js",
                "entry": "./legacy/legacy-road.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.starfieldProceduralTexture.min.js",
                "entry": "./legacy/legacy-starfield.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.woodProceduralTexture.min.js",
                "entry": "./legacy/legacy-wood.ts",
                "preventLoadLibrary": true
            }
        ],
        "build": {
            "webpack": "../../../proceduralTexturesLibrary/webpack.config.js",
            "srcDirectory": "../../proceduralTexturesLibrary/src/",
            "distOutputDirectory": "/proceduralTexturesLibrary/",
            "dtsBundle": {
                "name": "babylonjs-procedural-textures",
                "main": "../../dist/preview release/proceduralTexturesLibrary/build/src/index.d.ts",
                "out": "../babylonjs.proceduralTextures.module.d.ts",
                "baseDir": "../../dist/preview release/proceduralTexturesLibrary/build/",
                "headerText": "BabylonJS Procedural Textures"
            },
            "processDeclaration": {
                "filename": "babylonjs.proceduralTextures.module.d.ts",
                "packageName": "babylonjs-procedural-textures",
                "moduleName": "BABYLON",
                "importsToRemove": [],
                "classMap": {
                    "babylonjs": "BABYLON",
                    "babylonjs-loaders": "BABYLON",
                    "babylonjs-serializers": "BABYLON"
                }
            }
        }
    },
    "loaders": {
        "libraries": [
            {
                "output": "babylonjs.loaders.min.js",
                "entry": "./legacy/legacy.ts"
            },
            {
                "output": "babylon.objFileLoader.min.js",
                "entry": "./legacy/legacy-objFileLoader.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.stlFileLoader.min.js",
                "entry": "./legacy/legacy-stlFileLoader.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.glTF1FileLoader.min.js",
                "entry": "./legacy/legacy-glTF1FileLoader.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.glTF2FileLoader.min.js",
                "entry": "./legacy/legacy-glTF2FileLoader.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.glTFFileLoader.min.js",
                "entry": "./legacy/legacy-glTFFileLoader.ts",
                "preventLoadLibrary": true
            }
        ],
        "build": {
            "webpack": "../../../loaders/webpack.config.js",
            "srcDirectory": "../../loaders/src/",
            "distOutputDirectory": "/loaders/",
            "dtsBundle": {
                "name": "babylonjs-loaders",
                "main": "../../dist/preview release/loaders/build/src/index.d.ts",
                "out": "../babylonjs.loaders.module.d.ts",
                "baseDir": "../../dist/preview release/loaders/build/",
                "headerText": "BabylonJS Loaders"
            },
            "processDeclaration": {
                "filename": "babylonjs.loaders.module.d.ts",
                "packageName": "babylonjs-loaders",
                "moduleName": "BABYLON",
                "moduleSpecifics": [
                    {
                        "path": "babylonjs-loaders/src/glTF/1.0",
                        "namespace": "BABYLON.GLTF1"
                    },
                    {
                        "path": "babylonjs-loaders/src/glTF/2.0",
                        "namespace": "BABYLON.GLTF2"
                    },
                    {
                        "path": "babylonjs-loaders/src/glTF/2.0/glTFLoaderInterfaces",
                        "namespace": "BABYLON.GLTF2.Loader"
                    },
                    {
                        "path": "babylonjs-loaders/src/glTF/2.0/Extensions",
                        "namespace": "BABYLON.GLTF2.Loader.Extensions"
                    }
                ],
                "importsToRemove": [],
                "classMap": {
                    "babylonjs": "BABYLON",
                    "babylonjs-gltf2interface": "BABYLON.GLTF2"
                }
            }
        }
    },
    "serializers": {
        "libraries": [
            {
                "output": "babylonjs.serializers.min.js",
                "entry": "./legacy/legacy.ts"
            },
            {
                "output": "babylon.objSerializer.min.js",
                "entry": "./legacy/legacy-objSerializer.ts",
                "preventLoadLibrary": true
            },
            {
                "output": "babylon.glTF2Serializer.min.js",
                "entry": "./legacy/legacy-glTF2Serializer.ts",
                "preventLoadLibrary": true
            }
        ],
        "build": {
            "webpack": "../../../serializers/webpack.config.js",
            "srcDirectory": "../../serializers/src/",
            "distOutputDirectory": "/serializers/",
            "dtsBundle": {
                "name": "babylonjs-serializers",
                "main": "../../dist/preview release/serializers/build/src/index.d.ts",
                "out": "../babylonjs.serializers.module.d.ts",
                "baseDir": "../../dist/preview release/serializers/build/",
                "headerText": "BabylonJS serializers"
            },
            "processDeclaration": {
                "filename": "babylonjs.serializers.module.d.ts",
                "packageName": "babylonjs-serializers",
                "moduleName": "BABYLON",
                "importsToRemove": [],
                "classMap": {
                    "babylonjs": "BABYLON",
                    "babylonjs-loaders": "BABYLON",
                    "babylonjs-serializers": "BABYLON",
                    "babylonjs-gltf2interface": "BABYLON.GLTF2"
                },
                "moduleSpecifics": [
                    {
                        "path": "babylonjs-serializers/src/glTF/2.0",
                        "namespace": "BABYLON.GLTF2.Exporter"
                    },
                    {
                        "path": "babylonjs-serializers/src/glTF/2.0/Extensions",
                        "namespace": "BABYLON.GLTF2.Exporter.Extensions"
                    },
                    {
                        "path": "babylonjs-serializers/src/glTF/2.0/glTFData",
                        "namespace": "BABYLON"
                    },
                    {
                        "path": "babylonjs-serializers/src/glTF/2.0/glTFSerializer",
                        "namespace": "BABYLON"
                    }
                ]
            }
        }
    },
    "gui": {
        "libraries": [
            {
                "output": "babylon.gui.min.js",
                "entry": "././legacy/legacy.ts"
            }
        ],
        "build": {
            "webpack": "../../../gui/webpack.config.js",
            "srcDirectory": "../../gui/src/",
            "distOutputDirectory": "/gui/",
            "dtsBundle": {
                "name": "babylonjs-gui",
                "main": "../../dist/preview release/gui/build/src/index.d.ts",
                "out": "../babylon.gui.module.d.ts",
                "baseDir": "../../dist/preview release/gui/build/",
                "headerText": "BabylonJS GUI"
            },
            "processDeclaration": {
                "filename": "babylon.gui.module.d.ts",
                "packageName": "babylonjs-gui",
                "moduleName": "BABYLON.GUI",
                "importsToRemove": [],
                "classMap": {
                    "babylonjs": "BABYLON",
                    "babylonjs-loaders": "BABYLON",
                    "babylonjs-serializers": "BABYLON"
                }
            }
        }
    },
    "inspector": {
        "libraries": [
            {
                "output": "babylon.inspector.bundle.js",
                "entry": "././legacy/legacy.ts",
                "extendsRoot": true
            }
        ],
        "build": {
            "webpack": "../../../inspector/webpack.config.js",
            "srcDirectory": "../../inspector/src/",
            "distOutputDirectory": "/inspector/",
            "dtsBundle": {
                "name": "babylonjs-inspector",
                "main": "../../dist/preview release/inspector/build/src/index.d.ts",
                "out": "../babylon.inspector.module.d.ts",
                "baseDir": "../../dist/preview release/inspector/build/",
                "headerText": "BabylonJS Inspector"
            },
            "processDeclaration": {
                "filename": "babylon.inspector.module.d.ts",
                "packageName": "babylonjs-inspector",
                "moduleName": "INSPECTOR",
                "importsToRemove": [],
                "classMap": {
                    "babylonjs": "BABYLON",
                    "babylonjs-loaders": "BABYLON",
                    "babylonjs-serializers": "BABYLON",
                    "babylonjs-gui": "BABYLON.GUI"
                }
            }
        }
    },
    "viewer": {
        "libraries": [
            {
                "output": "babylon.viewer.js",
                "moduleDeclaration": {
                    "name": "BabylonViewer",
                    "module": "babylonjs-viewer"
                },
                "preventLoadLibrary": true
            }
        ],
        "build": {
            "webpack": "../../../Viewer/webpack.gulp.config.js",
            "srcDirectory": "../../Viewer/src/",
            "distOutputDirectory": "/viewer/",
            "dtsBundle": {
                "name": "babylonjs-viewer",
                "main": "../../dist/preview release/viewer/build/src/index.d.ts",
                "out": "../../babylon.viewer.module.d.ts"
            },
            "processDeclaration": {
                "packageName": "babylonjs-viewer",
                "moduleName": "BabylonViewer",
                "doNotAppendNamespace": true,
                "prependText": "/// <reference path=\"./babylon.d.ts\"/>\n/// <reference path=\"./babylon.glTF2Interface.d.ts\"/>\n/// <reference path=\"./babylonjs.loaders.d.ts\"/>\ndeclare module \"babylonjs-loaders\"{ export=BABYLON;}\n",
                "importsToRemove": [
                    "pep",
                    "babylonjs-loaders"
                ],
                "classMap": {
                    "babylonjs": "BABYLON",
                    "babylonjs-loaders": "BABYLON"
                }
            },
            "outputs": [
                {
                    "destinations": [
                        {
                            "filename": "viewer.js",
                            "outputDirectory": "/../../Viewer/dist/"
                        },
                        {
                            "filename": "babylon.viewer.js",
                            "outputDirectory": "/viewer/",
                            "addBabylonDeclaration": [
                                "babylon.d.ts",
                                "loaders/babylonjs.loaders.d.ts",
                                "glTF2Interface/babylon.glTF2Interface.d.ts"
                            ]
                        }
                    ],
                    "minified": true
                },
                {
                    "destinations": [
                        {
                            "filename": "viewer.max.js",
                            "outputDirectory": "/../../Viewer/dist/"
                        },
                        {
                            "filename": "babylon.viewer.max.js",
                            "outputDirectory": "/viewer/"
                        }
                    ]
                }
            ]
        }
    },
    "viewer-assets": {
        "libraries": [
            {
                "output": "babylon.viewer.assets.js",
                "moduleDeclaration": {
                    "name": "BabylonViewerAssets",
                    "module": "babylonjs-viewer-assets"
                },
                "preventLoadLibrary": true
            }
        ],
        "build": {
            "webpack": "../../../Viewer/webpack.assets.config.js",
            "srcDirectory": "../../Viewer/src/",
            "distOutputDirectory": "/viewer/",
            "dtsBundle": {
                "name": "babylonjs-viewer-assets",
                "main": "../../dist/preview release/viewer/build/src/assets/index.d.ts",
                "out": "../../../../../../Viewer/build/assets/babylon.viewer.assets.module.d.ts"
            },
            "outputs": [
                {
                    "destinations": [
                        {
                            "filename": "babylon.viewer.assets.js",
                            "outputDirectory": "/../../Viewer/build/assets/"
                        }
                    ],
                    "minified": true
                }
            ]
        }
    }
}